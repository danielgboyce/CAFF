}
bb3<-ddply(subset(datf,qid %in% c(17)),.(stock),.fun=f)
##PRESENCE AND AVAILABILITY OF IFMP
bb<-unique(subset(datf,select=c('stock','ifmp')))
bb$ifmp<-ifelse(bb$ifmp %in% c('Yes, Full IFMP'),2,bb$ifmp)
bb$ifmp<-ifelse(bb$ifmp %in% c('Yes, Summary of IFMP'),1,bb$ifmp)
bb$ifmp<-ifelse(bb$ifmp %in% c(''),0,bb$ifmp)
library(purrr)
blist<-list(bb,bb1,bb2,bb3)
btransp<-reduce(blist,join,by='stock')
btransp
f<-function(d){
d$stock.avail<-ifelse(d$ans %in% c('Data exists internally within DFO but is not shared across divisions / departments'),0,1)
d$stock.avail<-ifelse(d$ans %in% c('Data is publicly accessible'),2,d$stock.avail)
d<-subset(d,is.na(ans)==FALSE)
return(data.frame(stock.data.avail=round(mean(d$stock.avail,na.rm=TRUE)),digits=2))
}
bb1<-ddply(subset(datf,qid %in% c(8)),.(stock),.fun=f)
##DATA AVAILABILITY - CLIMATE
f<-function(d){
d$stock.avail<-ifelse(d$ans %in% c('Data exists internally within DFO but is not shared across divisions / departments'),0,1)
d$stock.avail<-ifelse(d$ans %in% c('Data is publicly accessible'),2,d$stock.avail)
d<-subset(d,is.na(ans)==FALSE)
return(data.frame(clim.data.avail=round(mean(d$stock.avail,na.rm=TRUE)),digits=2))
}
bb2<-ddply(subset(datf,qid %in% c(12)),.(stock),.fun=f)
##DATA AVAILABILITY - ECO
f<-function(d){
d$stock.avail<-ifelse(d$ans %in% c('Data exists internally within DFO but is not shared across divisions / departments'),0,1)
d$stock.avail<-ifelse(d$ans %in% c('Data is publicly accessible'),2,d$stock.avail)
d<-subset(d,is.na(ans)==FALSE)
return(data.frame(eco.data.avail=round(mean(d$stock.avail,na.rm=TRUE)),digits=2))
}
bb3<-ddply(subset(datf,qid %in% c(17)),.(stock),.fun=f)
##PRESENCE AND AVAILABILITY OF IFMP
bb<-unique(subset(datf,select=c('stock','ifmp')))
bb$ifmp<-ifelse(bb$ifmp %in% c('Yes, Full IFMP'),2,bb$ifmp)
bb$ifmp<-ifelse(bb$ifmp %in% c('Yes, Summary of IFMP'),1,bb$ifmp)
bb$ifmp<-ifelse(bb$ifmp %in% c(''),0,bb$ifmp)
library(purrr)
blist<-list(bb,bb1,bb2,bb3)
btransp<-reduce(blist,join,by='stock')
btransp
f<-function(d){
d$stock.avail<-ifelse(d$ans %in% c('Data exists internally within DFO but is not shared across divisions / departments'),0,1)
d$stock.avail<-ifelse(d$ans %in% c('Data is publicly accessible'),2,d$stock.avail)
d<-subset(d,is.na(ans)==FALSE)
return(data.frame(stock.data.avail=round(mean(d$stock.avail,na.rm=TRUE),digits=2)))
}
bb1<-ddply(subset(datf,qid %in% c(8)),.(stock),.fun=f)
##DATA AVAILABILITY - CLIMATE
f<-function(d){
d$stock.avail<-ifelse(d$ans %in% c('Data exists internally within DFO but is not shared across divisions / departments'),0,1)
d$stock.avail<-ifelse(d$ans %in% c('Data is publicly accessible'),2,d$stock.avail)
d<-subset(d,is.na(ans)==FALSE)
return(data.frame(clim.data.avail=round(mean(d$stock.avail,na.rm=TRUE),digits=2)))
}
bb2<-ddply(subset(datf,qid %in% c(12)),.(stock),.fun=f)
##DATA AVAILABILITY - ECO
f<-function(d){
d$stock.avail<-ifelse(d$ans %in% c('Data exists internally within DFO but is not shared across divisions / departments'),0,1)
d$stock.avail<-ifelse(d$ans %in% c('Data is publicly accessible'),2,d$stock.avail)
d<-subset(d,is.na(ans)==FALSE)
return(data.frame(eco.data.avail=round(mean(d$stock.avail,na.rm=TRUE),digits=2)))
}
bb3<-ddply(subset(datf,qid %in% c(17)),.(stock),.fun=f)
##PRESENCE AND AVAILABILITY OF IFMP
bb<-unique(subset(datf,select=c('stock','ifmp')))
bb$ifmp<-ifelse(bb$ifmp %in% c('Yes, Full IFMP'),2,bb$ifmp)
bb$ifmp<-ifelse(bb$ifmp %in% c('Yes, Summary of IFMP'),1,bb$ifmp)
bb$ifmp<-ifelse(bb$ifmp %in% c(''),0,bb$ifmp)
library(purrr)
blist<-list(bb,bb1,bb2,bb3)
btransp<-reduce(blist,join,by='stock')
btransp
names(btransp)
summary(btransp)
bb$ifmp<-as.numeric(bb$ifmp)
blist<-list(bb,bb1,bb2,bb3)
btransp<-reduce(blist,join,by='stock')
summary(btransp)
btransp$ifmp<-btransp$ifmp/2
summary(btransp)
blist<-list(bb,bb1,bb2,bb3)
btransp<-reduce(blist,join,by='stock')
btransp$ifmp<-btransp$ifmp/2
btransp$stock.data.avail<-btransp$stock.data.avail/3
btransp$clim.data.avail<-btransp$clim.data.avail/3
btransp$eco.data.avail<-btransp$eco.data.avail/3
btransp
btransp<-reduce(blist,join,by='stock')
btransp$ifmp<-btransp$ifmp/2
btransp$stock.data.avail<-round(btransp$stock.data.avail/3,digits=2)
btransp$clim.data.avail<-round(btransp$clim.data.avail/3,digits=2)
btransp$eco.data.avail<-round(btransp$eco.data.avail/3,digits=2)
btransp
names(btransp)
btransp$reliability<-rowSums(is.na(btransp[,2:5]))
btransp
btransp$reliability<-4-rowSums(is.na(btransp[,2:5]))
btransp
btransp$reliability<-4-round(rowSums(is.na(btransp[,2:5]))/4,digits=2)
btransp
1/4
btransp$reliability<-4-round(rowSums(is.na(btransp[,2:5]))/4,digits=2)
btransp
btransp$reliability<-round((4-rowSums(is.na(btransp[,2:5])))/4,digits=2)
btransp
bb<-subset(datf,qid==6,select=c('stock','ans'))
names(bb)[2]<-'data.availability'
bb
bb<-subset(datf,qid==6,select=c('stock','ans'))
names(bb)[2]<-'data.avail'
bb$data.avail<-ifelse(bb$data.avail %in% c('Data poor'),0,bb$data.avail)
bb$data.avail<-ifelse(bb$data.avail %in% c('Data moderate'),1,bb$data.avail)
bb$data.avail<-ifelse(bb$data.avail %in% c('Data rich'),2,bb$data.avail)
bb
bb$data.avail<-as.numeric(bb$data.avail)
bb
f<-function(d){
d$var<-gsub('_dedata','',d$var)
d$var<-gsub('_indata','',d$var)
##x<-subset(d,var %in% unique(d$var)[2])
f2<-function(x){
x$question2<-sort(unique(x$question2),decreasing=TRUE)[1]
##IF ONE VAR COLLECTED, BOTH COLLECTED
if('Collected' %in% x$ans){ x$ans<-'Collected'
} else NULL
return(unique(subset(x,select=c('stock','question2','ans'))))
}
dd<-ddply(d,.(var),.fun=f2)
dd$ans<-ifelse(dd$ans %in% c('Collected'),1,0)
return(data.frame(nstock.data=sum(dd$ans)))
}
bb<-ddply(subset(datf,qid %in% c(7) & rsptype==c('code')),.(stock),.fun=f)
bb
bb$nstock.data<-bb$nstock.data/5
bb$nstock.data<-ifelse(bb$nstock.data>=5,5,bb$nstock.data)
bb
bb<-ddply(subset(datf,qid %in% c(7) & rsptype==c('code')),.(stock),.fun=f)
bb$nstock.data<-bb$nstock.data/5
bb$nstock.data<-ifelse(bb$nstock.data>=1,1,bb$nstock.data)
bb
d<-subset(datf,qid==9 & stock %in% unique(datf$stock)[1])
f<-function(d){
d$ans<-gsub("[^0-9]", "", d$ans)
d$ans<-ifelse(is.na(d$ans),0,d$ans)
d$ans<-as.numeric(d$ans)
return(data.frame(lenstock.data=max(d$ans)))
}
bb<-ddply(subset(datf,qid==9),.(stock),.fun=f)
BB
bb
d<-subset(datf,qid==9 & stock %in% unique(datf$stock)[1])
f<-function(d){
d$ans<-gsub("[^0-9]", "", d$ans)
d$ans<-ifelse(is.na(d$ans),0,d$ans)
d$ans<-as.numeric(d$ans)
return(data.frame(lenstock.data=max(d$ans)))
}
bb<-ddply(subset(datf,qid==9),.(stock),.fun=f)
bb$lenstock.data<-bb$lenstock.data/50
bb
d<-subset(datf,qid==9 & stock %in% unique(datf$stock)[1])
f<-function(d){
d$ans<-gsub("[^0-9]", "", d$ans)
d$ans<-ifelse(is.na(d$ans),0,d$ans)
d$ans<-as.numeric(d$ans)
return(data.frame(lenstock.data=max(d$ans)))
}
bb<-ddply(subset(datf,qid==9),.(stock),.fun=f)
bb$lenstock.data<-bb$lenstock.data/50
bb$lenstock.data<-ifelse(bb$lenstock.data>=1,1,bb$lenstock.data)
bb
d<-subset(datf,qid==9 & stock %in% unique(datf$stock)[1])
f<-function(d){
d$ans<-gsub("[^0-9]", "", d$ans)
d$ans<-ifelse(is.na(d$ans),0,d$ans)
d$ans<-as.numeric(d$ans)
return(data.frame(lenstock.data=max(d$ans)))
}
bb<-ddply(subset(datf,qid==9),.(stock),.fun=f)
bb$lenstock.data<-bb$lenstock.data/40
bb$lenstock.data<-ifelse(bb$lenstock.data>=1,1,bb$lenstock.data)
summary(bb)
bb<-unique(subset(datf,select=c('stock','lrp','mortality','biomass')))
bb$mortality<-ifelse(bb$mortality %in% c('Yes'),1,0)
bb$biomass<-ifelse(bb$biomass %in% c('Yes'),1,0)
bb
summary(bb)
blist<-list(bb,bb1,bb2,bb3)
brigor<-reduce(blist,join,by='stock')
brigor
bb<-subset(datf,qid==6,select=c('stock','ans'))
names(bb)[2]<-'data.avail'
bb$data.avail<-ifelse(bb$data.avail %in% c('Data poor'),0,bb$data.avail)
bb$data.avail<-ifelse(bb$data.avail %in% c('Data moderate'),1,bb$data.avail)
bb$data.avail<-ifelse(bb$data.avail %in% c('Data rich'),2,bb$data.avail)
bb$data.avail<-as.numeric(bb$data.avail)
bb$data.avail<-round(bb$data.avail/2,digits=2)
bb1<-bb
bb1
f<-function(d){
d$var<-gsub('_dedata','',d$var)
d$var<-gsub('_indata','',d$var)
##x<-subset(d,var %in% unique(d$var)[2])
f2<-function(x){
x$question2<-sort(unique(x$question2),decreasing=TRUE)[1]
##IF ONE VAR COLLECTED, BOTH COLLECTED
if('Collected' %in% x$ans){ x$ans<-'Collected'
} else NULL
return(unique(subset(x,select=c('stock','question2','ans'))))
}
dd<-ddply(d,.(var),.fun=f2)
dd$ans<-ifelse(dd$ans %in% c('Collected'),1,0)
return(data.frame(nstock.data=sum(dd$ans)))
}
bb<-ddply(subset(datf,qid %in% c(7) & rsptype==c('code')),.(stock),.fun=f)
##MINIMUM FIVE CORE VARIABLES NEEDED FOR GOOD STOCK MANAGEMEN: SSB, RECRUITMENT, AGE, WEIGHT, LENGTH
bb$nstock.data<-bb$nstock.data/5
bb$nstock.data<-ifelse(bb$nstock.data>=1,1,bb$nstock.data)
bb
bb2<-bb
bb2
d<-subset(datf,qid==9 & stock %in% unique(datf$stock)[1])
f<-function(d){
d$ans<-gsub("[^0-9]", "", d$ans)
d$ans<-ifelse(is.na(d$ans),0,d$ans)
d$ans<-as.numeric(d$ans)
return(data.frame(lenstock.data=max(d$ans)))
}
bb<-ddply(subset(datf,qid==9),.(stock),.fun=f)
bb$lenstock.data<-bb$lenstock.data/40
bb$lenstock.data<-ifelse(bb$lenstock.data>=1,1,bb$lenstock.data)
bb
bb3<-bb
bb<-subset(datf,qid==6,select=c('stock','ans'))
names(bb)[2]<-'data.avail'
bb$data.avail<-ifelse(bb$data.avail %in% c('Data poor'),0,bb$data.avail)
bb$data.avail<-ifelse(bb$data.avail %in% c('Data moderate'),1,bb$data.avail)
bb$data.avail<-ifelse(bb$data.avail %in% c('Data rich'),2,bb$data.avail)
bb$data.avail<-as.numeric(bb$data.avail)
bb$data.avail<-round(bb$data.avail/2,digits=2)
bb1<-bb
###############
##NUMBER OF STOCK VARIABLES AVAILABLE
f<-function(d){
d$var<-gsub('_dedata','',d$var)
d$var<-gsub('_indata','',d$var)
##x<-subset(d,var %in% unique(d$var)[2])
f2<-function(x){
x$question2<-sort(unique(x$question2),decreasing=TRUE)[1]
##IF ONE VAR COLLECTED, BOTH COLLECTED
if('Collected' %in% x$ans){ x$ans<-'Collected'
} else NULL
return(unique(subset(x,select=c('stock','question2','ans'))))
}
dd<-ddply(d,.(var),.fun=f2)
dd$ans<-ifelse(dd$ans %in% c('Collected'),1,0)
return(data.frame(nstock.data=sum(dd$ans)))
}
bb<-ddply(subset(datf,qid %in% c(7) & rsptype==c('code')),.(stock),.fun=f)
##MINIMUM FIVE CORE VARIABLES NEEDED FOR GOOD STOCK MANAGEMEN: SSB, RECRUITMENT, AGE, WEIGHT, LENGTH
bb$nstock.data<-bb$nstock.data/5
bb$nstock.data<-ifelse(bb$nstock.data>=1,1,bb$nstock.data)
bb2<-bb
###############
##NUMBER OF YEARS OVER WHICH STOCK VARIABLES ARE AVAILABLE
d<-subset(datf,qid==9 & stock %in% unique(datf$stock)[1])
f<-function(d){
d$ans<-gsub("[^0-9]", "", d$ans)
d$ans<-ifelse(is.na(d$ans),0,d$ans)
d$ans<-as.numeric(d$ans)
return(data.frame(lenstock.data=max(d$ans)))
}
bb<-ddply(subset(datf,qid==9),.(stock),.fun=f)
bb$lenstock.data<-bb$lenstock.data/40
bb$lenstock.data<-ifelse(bb$lenstock.data>=1,1,bb$lenstock.data)
bb3<-bb
###############
##LRP, BIOMASS, MORTALITY AVAILABLE?
bb<-unique(subset(datf,select=c('stock','lrp','mortality','biomass')))
bb$mortality<-ifelse(bb$mortality %in% c('Yes'),1,0)
bb$biomass<-ifelse(bb$biomass %in% c('Yes'),1,0)
blist<-list(bb,bb1,bb2,bb3)
brigor<-reduce(blist,join,by='stock')
brigor
names(brigor)
btransp$rigor<-round((6-rowSums(is.na(brigor[,2:7])))/6,digits=2)
brigor$rigor<-round((6-rowSums(is.na(brigor[,2:7])))/6,digits=2)
brigor$reliability<-round((6-rowSums(is.na(brigor[,2:7])))/6,digits=2)
brigor
brigor<-reduce(blist,join,by='stock')
#RELIABILITY BASES ON NUMBER OF INDICES AVAILABLE
brigor$reliability<-round((6-rowSums(is.na(brigor[,2:7])))/6,digits=2)
brigor
brigor$rigor<-round(rowMeans(brigor[,2:7]),digits=2)
brigor
brigor$rigor<-round(rowMeans(brigor[,2:7],na.rm=TRUE),digits=2)
brigor
f<-function(d){
d$ans<-ifelse(d$ans %in% c(''), NA, d$ans)
d$ans<-ifelse(is.na(d$ans), 0, 1)
return(data.frame(nclimate.dir<-sum(d$ans)))
}
bb<-ddply(subset(datf,qid %in% c(25)),.(stock),.fun=f)
bb
f<-function(d){
d$ans<-as.numeric(d$ans)
d$ans<-ifelse(is.na(d$ans),0,d$ans)
return(data.frame(lenclimate.dir<-max(d$ans)))
}
bb<-ddply(subset(datf,qid %in% c(26)),.(stock),.fun=f)
bb
f<-function(d){
d$ans<-ifelse(d$ans %in% c(''), NA, d$ans)
d$ans<-ifelse(is.na(d$ans), 0, 1)
return(data.frame(nclimate.indir<-sum(d$ans)))
}
bb<-ddply(subset(datf,qid %in% c(35)),.(stock),.fun=f)
bb
f<-function(d){
d$ans<-ifelse(d$ans %in% c(''), NA, d$ans)
d$ans<-ifelse(is.na(d$ans), 0, 1)
return(data.frame(nclimate.indir=sum(d$ans)))
}
bb<-ddply(subset(datf,qid %in% c(35)),.(stock),.fun=f)
bb
f<-function(d){
d$ans<-as.numeric(d$ans)
d$ans<-ifelse(is.na(d$ans),0,d$ans)
return(data.frame(lenclimate.indir=max(d$ans)))
}
bb<-ddply(subset(datf,qid %in% c(36)),.(stock),.fun=f)
bb
f<-function(d){
d$ans<-ifelse(d$ans %in% c(''), NA, d$ans)
d$ans<-ifelse(is.na(d$ans), 0, 1)
return(data.frame(nclimate.dir<-sum(d$ans)))
}
bb<-ddply(subset(datf,qid %in% c(25)),.(stock),.fun=f)
bb
f<-function(d){
d$ans<-ifelse(d$ans %in% c(''), NA, d$ans)
d$ans<-ifelse(is.na(d$ans), 0, 1)
return(data.frame(nclimate.dir=sum(d$ans)))
}
bb<-ddply(subset(datf,qid %in% c(25)),.(stock),.fun=f)
bb
##NUMBER OF YEARS OVER WHICH CLIMATE VARIABLES DIRECTLY INCLUDED IN STOCK ASSESSMENTS
f<-function(d){
d$ans<-as.numeric(d$ans)
d$ans<-ifelse(is.na(d$ans),0,d$ans)
return(data.frame(lenclimate.dir=max(d$ans)))
}
bb<-ddply(subset(datf,qid %in% c(26)),.(stock),.fun=f)
bb
##NUMBER OF CLIMATE VARIABLES INDIRECTLY INCLUDED IN STOCK ASSESSMENTS
f<-function(d){
d$ans<-ifelse(d$ans %in% c(''), NA, d$ans)
d$ans<-ifelse(is.na(d$ans), 0, 1)
return(data.frame(nclimate.indir=sum(d$ans)))
}
bb<-ddply(subset(datf,qid %in% c(35)),.(stock),.fun=f)
bb
##NUMBER OF YEARS OVER WHICH CLIMATE VARIABLES INDIRECTLY INCLUDED IN STOCK ASSESSMENTS
f<-function(d){
d$ans<-as.numeric(d$ans)
d$ans<-ifelse(is.na(d$ans),0,d$ans)
return(data.frame(lenclimate.indir=max(d$ans)))
}
bb<-ddply(subset(datf,qid %in% c(36)),.(stock),.fun=f)
bb
blist<-list(bb,bb1,bb2,bb3)
bclim<-reduce(blist,join,by='stock')
bclim
f<-function(d){
d$ans<-ifelse(d$ans %in% c(''), NA, d$ans)
d$ans<-ifelse(is.na(d$ans), 0, 1)
return(data.frame(nclimate.dir=sum(d$ans)))
}
bb1<-ddply(subset(datf,qid %in% c(25)),.(stock),.fun=f)
##NUMBER OF YEARS OVER WHICH CLIMATE VARIABLES DIRECTLY INCLUDED IN STOCK ASSESSMENTS
f<-function(d){
d$ans<-as.numeric(d$ans)
d$ans<-ifelse(is.na(d$ans),0,d$ans)
return(data.frame(lenclimate.dir=max(d$ans)))
}
bb2<-ddply(subset(datf,qid %in% c(26)),.(stock),.fun=f)
##NUMBER OF CLIMATE VARIABLES INDIRECTLY INCLUDED IN STOCK ASSESSMENTS
f<-function(d){
d$ans<-ifelse(d$ans %in% c(''), NA, d$ans)
d$ans<-ifelse(is.na(d$ans), 0, 1)
return(data.frame(nclimate.indir=sum(d$ans)))
}
bb3<-ddply(subset(datf,qid %in% c(35)),.(stock),.fun=f)
##NUMBER OF YEARS OVER WHICH CLIMATE VARIABLES INDIRECTLY INCLUDED IN STOCK ASSESSMENTS
f<-function(d){
d$ans<-as.numeric(d$ans)
d$ans<-ifelse(is.na(d$ans),0,d$ans)
return(data.frame(lenclimate.indir=max(d$ans)))
}
bb<-ddply(subset(datf,qid %in% c(36)),.(stock),.fun=f)
blist<-list(bb,bb1,bb2,bb3)
bclim<-reduce(blist,join,by='stock')
bclim
bclim$climinc<-ifelse(bclim$nclimate.dir>=1,2,bclim$climinc)
bclim$climinc<-ifelse(bclim$nclimate.dir>=1,2,bclim$climinc)
bclim$climinc<-ifelse(bclim$nclimate.dir>=1,2,0)
bclim$climinc<-ifelse(bclim$nclimate.indir>=1,1,bclim$climinc)
bclim
bclim$climinc<-ifelse(bclim$nclimate.dir>=1,2,0)
bclim$climinc<-ifelse(bclim$nclimate.indir>=1,1,bclim$climinc)
bclim$climinc<-bclim$climinc/2
bclim
bclim$lenclimate.indir<-ifelse(bclim$nclimate.indir==0,0,bclim$lenclimate.indir)
bclimd
bclim
bclim<-reduce(blist,join,by='stock')
bclim$climinc<-ifelse(bclim$nclimate.dir>=1,2,0)
bclim$climinc<-ifelse(bclim$nclimate.indir>=1,1,bclim$climinc)
bclim$climinc<-bclim$climinc/2
bclim$lenclimate.indir<-ifelse(bclim$nclimate.indir==0,0,bclim$lenclimate.indir)
bclim$climlen.dir<-round(bclim$lenclimate.dir/40,digits=2)
bclim$climlen.indir<-round(bclim$lenclimate.indir/40,digits=2)
bclim
bclim$climstock<-round(mean(bclim$climinc,bclim$climlen.dir,bclim$climlen.indir),digits=2)
bclim$climstock<-round(mean(c(bclim$climinc,bclim$climlen.dir,bclim$climlen.indir)),digits=2)
bclim
bclim
names(bclim)
bclim$climstock<-round(mean(bclim[,6:8]),digits=2)
bclim$climstock<-rowMeans(bclim[,6:8]),digits=2)
bclim$climstock<-round(rowMeans(bclim[,6:8]),digits=2)
bclim
mean(1,.5,0)
1.5/2
1.5/3
.5/3
bclim$reliab<-round(rowSums(is.na(bclim[,6:8])),digits=2)
bclim
bclim$reliab<-round(3-rowSums(is.na(bclim[,6:8])),digits=2)
bclim
bclim$reliab<-round(3-rowSums(is.na(bclim[,6:8]))/3,digits=2)
bclim
bclim$reliab<-rowSums(is.na(bclim[,6:8]))
bclim
bclim$reliab<-3-rowSums(is.na(bclim[,6:8]))
bclim
bclim$reliab<-round((3-rowSums(is.na(bclim[,6:8])))/3,digits=2)
bclim
tempdir()
list.files(tempdir())
(load('N:/data/CAFF/data/Surveys/formatted/FiMACC_Survey_2023_Formatted.RData'))
datadir<-'N:/data/CAFF/data/Surveys/'
##PACKAGES
library(tidyr)
library(plyr)
library(dplyr)
library(stringr)
a<-unique(subset(datf,select=c('qid','question1')))
a$dup<-duplicated(a$question1)
b<-subset(a,dup==TRUE)
b
a<-unique(subset(datf,select=c('qid','var','question1')))
a$dup<-duplicated(a$question1)
b<-subset(a,dup==TRUE)
b
a<-unique(subset(datf,qid %in% c(14,19,22,33,34,43,45,46,54,56,57,90,91),select=c('qid','ans')))
length(unique(a$ans))
unique(a$ans)
a<-unique(subset(datf,qid %in% c(14,19,22,33,34,43,45,46,54,56,57,90,91),select=c('qid','question1','ans')))
write.csv(a,'N:/data/CAFF/data/Surveys/BarriersResources/BarriersResources.csv',row.names=FALSE)
a<-unique(subset(datf,ia.na(ans)==FALSE & qid %in% c(14,19,22,33,34,43,45,46,54,56,57,90,91),select=c('qid','question1','ans')))
a<-unique(subset(datf,is.na(ans)==FALSE & qid %in% c(14,19,22,33,34,43,45,46,54,56,57,90,91),select=c('qid','question1','ans')))
write.csv(a,'N:/data/CAFF/data/Surveys/BarriersResources/BarriersResources.csv',row.names=FALSE)
##LOCATION OF DATA
datadir<-'N:/data/CAFF/data/Surveys/'
##PACKAGES
library(tidyr)
library(plyr)
library(dplyr)
library(stringr)
library(purrr)
library(ggplot2)
library(hrbrthemes)
library(pals)
(load('N:/data/CAFF/data/Surveys/formatted/FiMACC_Survey_2023_Formatted.RData'))
library(tidyr)
library(plyr)
library(dplyr)
library(stringr)
library(purrr)
library(ggplot2)
library(hrbrthemes)
library(pals)
library(sf)
mcrt<-"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
ws<-st_read('N:/data/shapefiles/eez/v8','World_EEZ_v8_2014_HR')
st_crs(ws)<-mcrt
names(ws)<-tolower(names(ws))
ws$sovereign<-ifelse(ws$sovereign %in% c('Democratic Republic of the Congo',"RÃ©publique du Congo"),'Congo',as.character(ws$sovereign))
am<-subset(ws,country %in% c('Canada','United States'))
am<-subset(ws,country %in% c('Canada','United States'))
ca<-subset(ws,country %in% c('Canada'))
eu<-subset(ws,country %in% c('Spain','France','Germany', 'Belgium','Denmark','Greece','Croatia','Ireland','Italy','Netherlands','Ireland','United Kingdom','Portugal'))
pdf('C:/Users/sailfish/Documents/aalldocuments/presentations/2023_WoodsHole/basemaps.pdf',height=3, width=3)
plot(st_geometry(am),axes=FALSE,border='magenta3',col='magenta3',lwd=0.001)
plot(st_geometry(eu),axes=FALSE,col='green3',border='green3',lwd=0.001)
plot(st_geometry(ca),axes=FALSE,col='dodgerblue3',border='dodgerblue3',lwd=0.001)
dev.off()
graphics.off()
